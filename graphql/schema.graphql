# GraphQL SDL Stub for Portable Content (spec-local)

scalar JSON
scalar MediaType

interface Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type MarkdownBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type MermaidBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type ImageBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type VideoBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type CodeBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type DocumentBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type RepoBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type EmbedBlock implements Block {
  id: ID!
  kind: String!
  payload: JSON
  variants: [Variant!]!
}

type Variant {
  mediaType: MediaType!
  uri: String
  width: Int
  height: Int
  bytes: Int
}

input CapabilitiesInput {
  accept: [MediaType!]!
  width: Int
  density: Int
  network: String
}

type ContentItem {
  id: ID!
  type: String!
  title: String
  summary: String
  blocks: [Block!]!
}

# Optional: Note type referencing ContentItem for implementations that expose Notes
# (Not normative for the content spec itself)

type Note {
  id: ID!
  title: String
  content: ContentItem
  summary: String
}

type Query {
  content(id: ID!, capabilities: CapabilitiesInput, representation: String): ContentItem
}

